import java.io.*;
import java.util.*;
import java.util.concurrent.CountDownLatch;

public class FileSystem {

    static List<File> MainTree = new java.util.LinkedList<File>();
    static final File ROOT = new File("ROOT", MainTree);
    static File f_choose = ROOT;
    public static void main(String[] args) throws Exception {

        //f_choose = ROOT;
        boolean SystemFlag = true;
        while (SystemFlag) {
            BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

            System.out.println("|| 1 add || 2 delete || 3 show || 4 exit || 5 open file || 6 search || 7 back to main ||");

            int choose = Integer.parseInt(br.readLine());
            switch (choose) {
                case 1:
                    addFile();
                    break;

                case 2:
                    deleteFile();
                    break;

                case 3:
                    showList();
                    break;

                case 4:
                    SystemFlag = false;
                    break;

                case 5:
                    chooseFile();
                    break;

                case 6:
                    search();
                    break;

                case 7:
                    f_choose = ROOT;
                    break;

                default:
                    break;
            }
        }

    }

    public static void addFile() throws Exception {
        System.out.println("================[add]===================");
        System.out.println("input new file name: ");
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String name = br.readLine();

        ((LinkedList<File>) f_choose.SubTree).addLast(new File(name));
        System.out.println("file create succesed!");
    }



    public static void deleteFile() throws Exception{
        System.out.println("================[delete]===================");
        System.out.println("input file name : ");
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String name = br.readLine();
        boolean flag = false;

        for (Iterator<File> choose = f_choose.SubTree.iterator(); choose.hasNext();) {
            File ff = choose.next();
            
            if ((ff.getName()).equals(name)) {
                flag = true;
                choose.remove();
            }
        }
        
        if(flag){
            System.out.println("file deleted!");
        }else{
            System.out.println("can not find file!");
        }
    }
    


    public static void showList() {
        System.out.println("================[show]===================");
        for (File f : (List<File>) f_choose.SubTree) {
            System.out.print(" [ " + f.getName() + " ] ");
        }
        System.out.println();
        
    }


    public static void chooseFile() throws Exception {
        System.out.println("================[choose]===================");
        System.out.println("write file name you choose: ");
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String choose = br.readLine();

        try {
            //int count = 0;
            for (File f : (List<File>) f_choose.SubTree) {
                if (choose.equals(f.getName())) {
                    f_choose = f;
                    System.out.println("you have select the file: " + f_choose.getName());
                    showList();
                    break;
                } else {
                    //System.out.println("file select failed");
                }
                
            }
        } catch (Exception e) {
            System.out.println("file select failed");
        }
        
    }

    public static void search() throws Exception {
        System.out.println("================[search]===================");
        System.out.println("input name searching for: ");
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        String name = br.readLine();
        int loc = -1, i = 0;

        for (File f : (List<File>) f_choose.SubTree) {

            if (name.equals(f.getName())) {
                loc = i;
            }
            i++;
        }
        System.out.println("it's loacated at: " + loc);
    }
}

class File {
    String name;
    // Integer no, nums;
    Object obj;

    List<File> SubTree = (List<File>) new LinkedList<File>();

    public File(String name) {
        // super();
        
        this.name = name;
        SubTree = (List<File>) new LinkedList<File>();
        //SubTree.add(this);
        ((LinkedList<File>) SubTree).addLast(FileSystem.f_choose);
    }

    public File(String name, List<File> SubTree) {
        // super();
        this.name = name;
        SubTree = (List<File>) new LinkedList<File>();
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

}